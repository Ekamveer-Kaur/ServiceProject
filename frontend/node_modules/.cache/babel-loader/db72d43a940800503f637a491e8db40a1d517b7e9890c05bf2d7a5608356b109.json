{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satyam\\\\Desktop\\\\FinalProject\\\\frontend\\\\src\\\\components\\\\ViewAddtocart.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\"; // ✅ Import axios\n\n// const Addtocart = () => {\n//   const [cart, setCart] = useState([]);\n//   const [orderPlace, setOrderPlace] = useState(false);\n//   const [cartCount, setCartCount] = useState(0);\n//   const [deliveryType, setDeliveryType] = useState(\"Normal\");\n//   const [address, setAddress] = useState(\"\");\n//   const [city, setCity] = useState(\"\");\n//   const [pincode, setPincode] = useState(\"\");\n//   const [step, setStep] = useState(0);\n//   const [finalAmount, setFinalAmount] = useState(0);\n//   const navigate = useNavigate();\n\n//   const email = localStorage.getItem(\"email\") || \"guest\";\n\n//   useEffect(() => {\n//     const storedCart = JSON.parse(localStorage.getItem(`cart_${email}`)) || [];\n//     setCart(storedCart);\n//     setCartCount(storedCart.length);\n//   }, [email]);\n\n//   const updateCart = (updatedCart) => {\n//     setCart(updatedCart);\n//     setCartCount(updatedCart.length);\n//     localStorage.setItem(`cart_${email}`, JSON.stringify(updatedCart));\n//     localStorage.setItem(\"cartcount\", updatedCart.length);\n//     window.dispatchEvent(new Event(\"storage\"));\n//   };\n\n//   const handleIncreaseQuantity = (index) => {\n//     const updatedCart = cart.map((item, i) =>\n//       i === index ? { ...item, quantity: item.quantity + 1 } : item\n//     );\n//     updateCart(updatedCart);\n//   };\n\n//   const handleDecreaseQuantity = (index) => {\n//     const updatedCart = cart\n//       .map((item, i) =>\n//         i === index && item.quantity > 1\n//           ? { ...item, quantity: item.quantity - 1 }\n//           : item\n//       )\n//       .filter((item) => item.quantity > 0);\n\n//     updateCart(updatedCart);\n//   };\n\n//   const handleRemoveItem = (index) => {\n//     const updatedCart = cart.filter((_, i) => i !== index);\n//     updateCart(updatedCart);\n//   };\n\n//   const totalAmount = cart\n//     .reduce((total, item) => total + item.price * item.quantity, 0)\n//     .toFixed(2);\n\n//   const extraCharge = deliveryType === \"Fast\" ? 50 : 0;\n//   const totalAmountWithDelivery = parseFloat(totalAmount) + extraCharge;\n\n//   const getServiceDate = () => {\n//     const date = new Date();\n//     date.setDate(date.getDate() + (deliveryType === \"Fast\" ? 1 : 3));\n//     return date;\n//   };\n\n//   const handlePlaceOrder = async () => {\n//     const userId = localStorage.getItem(\"USER\");\n\n//     if (!userId || cart.length === 0) {\n//       alert(\"Invalid order data. Please log in and add items.\");\n//       return;\n//     }\n\n//     if (!address.trim() || !city.trim() || !pincode.trim() || !deliveryType) {\n//       alert(\"Please fill all delivery details (address, city, pincode, delivery type).\");\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/api/order\", {\n//         userId,\n//         cartItems: cart,\n//         totalAmount: totalAmountWithDelivery,\n//         pincode,\n//         address,\n//         city,\n//         serviceDate: getServiceDate(),\n//         deliveryType,\n//         userEmail: email,\n//       });\n\n//       const orderData = response.data.order;\n\n//       if (response.status === 201 && orderData._id) {\n//         const options = {\n//           key: \"rzp_test_99IwqPHWTFKkXS\",\n//           amount: parseFloat(totalAmountWithDelivery) * 100,\n//           currency: \"INR\",\n//           name: \"Softwizz\",\n//           description: \"Order Payment\",\n//           handler: async function (razorpayResponse) {\n//             try {\n//               const paymentRes = await axios.put(\n//                 `http://localhost:5000/api/updatepayment/${orderData._id}`,\n//                 {\n//                   paymentId: razorpayResponse.razorpay_payment_id,\n//                   paymentStatus: \"Paid\",\n//                 }\n//               );\n\n//               if (paymentRes.status === 200) {\n//                 alert(\"Payment Successful!\");\n//                 localStorage.removeItem(`cart_${email}`);\n//                 localStorage.setItem(\"cartcount\", 0);\n//                 setCart([]);\n//                 setCartCount(0);\n//                 setOrderPlace(true);\n//                 window.dispatchEvent(new Event(\"storage\"));\n//                 navigate(\"/\");\n//               } else {\n//                 alert(\"Payment captured but failed to update order.\");\n//               }\n//             } catch (err) {\n//               console.error(\"Payment update failed:\", err);\n//               alert(\"Payment succeeded but order update failed.\");\n//             }\n//           },\n//           prefill: {\n//             name: address,\n//             email: email,\n//             contact: \"9999999999\",\n//           },\n//           theme: {\n//             color: \"#3399cc\",\n//           },\n//         };\n\n//         const rzp = new window.Razorpay(options);\n//         rzp.open();\n//       } else {\n//         alert(\"Failed to create order. Try again.\");\n//       }\n//     } catch (error) {\n//       console.error(\"Order placement error:\", error);\n//       alert(\"Something went wrong. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"addtocart-container py-5\" style={{ padding: \"20px\" }}>\n//       {/* Internal CSS */}\n//       <style>{`\n//         .checkout-steps {\n//           display: flex;\n//           justify-content: space-between;\n//           margin-bottom: 30px;\n//           flex-wrap: wrap;\n//         }\n//         .step {\n//           text-align: center;\n//           flex: 1;\n//           position: relative;\n//           padding: 10px;\n//           min-width: 80px;\n//         }\n//         .step::after {\n//           content: '';\n//           position: absolute;\n//           top: 20px;\n//           right: -50%;\n//           width: 100%;\n//           height: 4px;\n//           background-color: #ddd;\n//           z-index: 0;\n//         }\n//         .step:last-child::after {\n//           display: none;\n//         }\n//         .step-circle {\n//           width: 40px;\n//           height: 40px;\n//           margin: 0 auto;\n//           line-height: 40px;\n//           border-radius: 50%;\n//           font-weight: bold;\n//           color: white;\n//           background-color: #ccc;\n//           z-index: 1;\n//           position: relative;\n//           transition: all 0.3s ease;\n//         }\n//         .step-label {\n//           margin-top: 10px;\n//           font-weight: 500;\n//           font-size: 14px;\n//         }\n//         .step.active .step-circle {\n//           background-color: #007bff;\n//           box-shadow: 0 0 10px rgba(0, 123, 255, 0.6);\n//         }\n//         .step.completed .step-circle {\n//           background-color: #28a745;\n//           box-shadow: 0 0 10px rgba(40, 167, 69, 0.6);\n//         }\n//         @media (max-width: 768px) {\n//           .step {\n//             flex: none;\n//             width: 25%;\n//           }\n//           .step-label {\n//             font-size: 12px;\n//           }\n//         }\n//       `}</style>\n\n//       {/* Step Indicators */}\n//       <div className=\"checkout-steps\">\n//         {[\"Cart\", \"Address\", \"Payment\", \"Summary\"].map((label, idx) => (\n//           <div\n//             key={idx}\n//             className={`step ${step === idx ? \"active\" : step > idx ? \"completed\" : \"\"}`}\n//           >\n//             <div className=\"step-circle\">{idx + 1}</div>\n//             <div className=\"step-label\">{label}</div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Step 0 - Cart */}\n//       {step === 0 && (\n//         <div className=\"row\">\n//           <div className=\"col-md-8\">\n//             <h4>Your Cart</h4>\n//             <div className=\"row\">\n//               {cart.map((item, index) => (\n//                 <div key={index} className=\"col-md-6 mb-4\">\n//                   <div className=\"card cart-card shadow-sm\">\n//                     <img\n//                       src={item.image}\n//                       className=\"card-img-top\"\n//                       style={{ height: \"180px\", objectFit: \"cover\" }}\n//                       alt={item.name}\n//                     />\n//                     <div className=\"card-body\">\n//                       <h5 className=\"card-title\">{item.name}</h5>\n//                       <p className=\"card-text\">\n//   ₹{item.price} × {item.quantity} = ₹{item.price * item.quantity}\n// </p>\n\n//                       <div className=\"d-flex justify-content-between\">\n//                         <button\n//                           className=\"btn btn-success btn-sm\"\n//                           onClick={() => handleIncreaseQuantity(index)}\n//                         >\n//                           +\n//                         </button>\n//                         <button\n//                           className=\"btn btn-warning btn-sm text-white\"\n//                           onClick={() => handleDecreaseQuantity(index)}\n//                         >\n//                           -\n//                         </button>\n//                         <button\n//                           className=\"btn btn-danger btn-sm\"\n//                           onClick={() => handleRemoveItem(index)}\n//                         >\n//                           Remove\n//                         </button>\n//                       </div>\n//                     </div>\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n\n//           <div className=\"col-md-4\">\n//             <div className=\"card p-3 shadow\">\n//               <h5>Order Summary</h5>\n//               <ul className=\"list-group list-group-flush\">\n//                 {cart.map((item, idx) => (\n//                   <li key={idx} className=\"list-group-item d-flex justify-content-between\">\n//                     <span>{item.name} × {item.quantity}</span>\n\n//                     <span>₹{item.price}</span>\n//                   </li>\n//                 ))}\n//                 <li className=\"list-group-item fw-bold d-flex justify-content-between border-top\">\n//                   <span>Total</span>\n//                   <span>₹{totalAmount}</span>\n//                 </li>\n//               </ul>\n//               <button\n//                 className=\"btn btn-primary mt-3 w-100\"\n//                 disabled={cart.length === 0}\n//                 onClick={() => setStep(1)}\n//               >\n//                 Continue\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Step 1 - Address */}\n//       {step === 1 && (\n//         <div className=\"row justify-content-center\">\n//           <div className=\"col-md-6\">\n//             <h4>Delivery Address</h4>\n//             <input\n//               className=\"form-control my-2\"\n//               placeholder=\"Address\"\n//               value={address}\n//               onChange={(e) => setAddress(e.target.value)}\n//             />\n//             <input\n//               className=\"form-control my-2\"\n//               placeholder=\"City\"\n//               value={city}\n//               onChange={(e) => setCity(e.target.value)}\n//             />\n//             <input\n//               className=\"form-control my-2\"\n//               placeholder=\"Pincode\"\n//               value={pincode}\n//               onChange={(e) => setPincode(e.target.value)}\n//             />\n//             <select\n//               className=\"form-control my-2\"\n//               value={deliveryType}\n//               onChange={(e) => setDeliveryType(e.target.value)}\n//             >\n//               <option value=\"\">Select Delivery Type</option>\n//               <option value=\"Fast\">Fast (₹50, 1 Days)</option>\n//               <option value=\"Slow\">Normal (Free, 3 Days)</option>\n//             </select>\n\n//             <button\n//               className=\"btn btn-primary w-100\"\n//               onClick={() => {\n//                 if (address && city && pincode && deliveryType) {\n//                   setStep(2);\n//                 } else {\n//                   alert(\"Please fill all fields!\");\n//                 }\n//               }}\n//             >\n//               Continue to Payment\n//             </button> \n\n//             <button className=\"btn btn-secondary w-100 mt-2\" onClick={() => setStep(0)}>\n//               Back to Cart\n//             </button>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Step 2 - Payment */}\n//       {step === 2 && (\n//         <div className=\"text-center\">\n//           <h4>Payment</h4>\n//           <p>Simulated payment method (Cash/UPI etc)</p>\n//           <button\n//   className=\"btn btn-dark\"\n//   onClick={() => {\n//     const extraCharge = deliveryType === \"Fast\" ? 50 : 0;\n//     setFinalAmount(parseFloat(totalAmount) + extraCharge); // 👈 Add this\n//     setStep(3);\n//   }}\n// >\n//   Continue to Summary\n// </button>\n\n//           <br />\n//           <button className=\"btn btn-secondary mt-2\" onClick={() => setStep(1)}>\n//             Back to Address\n//           </button>\n//         </div>\n//       )}\n\n//       {/* Step 3 - Summary */}\n//       {step === 3 && (\n//         <div className=\"text-center\">\n//           <h4>Order Summary</h4>\n//           <p>Total: ₹{finalAmount}</p>\n//           <button className=\"btn btn-success\" onClick={handlePlaceOrder}>\n//             Place Order\n//           </button>\n//           <br />\n//           <button className=\"btn btn-secondary mt-2\" onClick={() => setStep(2)}>\n//             Back to Payment\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }  \n\n// export default Addtocart;\n\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// import \"./Addtocart.css\";\n\nimport api from \"../axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Addtocart = () => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [cartcount, setCartcount] = useState(0);\n  const [orderplaced, setOrderPlaced] = useState(false);\n  const [deliveryType, setDeliveryType] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [pincode, setPincode] = useState(\"\");\n  const [step, setStep] = useState(0);\n  const navigate = useNavigate();\n  const email = localStorage.getItem(\"EMAIL\") || \"guest\";\n\n  // Ensure the user is logged in and is not an admin\n\n  useEffect(() => {\n    const user = localStorage.getItem(\"USER\");\n    const role = localStorage.getItem(\"Role\");\n    if (!user || role === \"admin\") {\n      console.log(\"Role in localStorage:\", role); // Debugging: Check the role\n\n      alert(\"Access denied! Please login as a valid user.\");\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n\n  // Load cart from localStorage on initial render\n\n  useEffect(() => {\n    const storedCart = JSON.parse(localStorage.getItem(`cart_${email}`)) || [];\n    setCart(storedCart);\n    setCartcount(storedCart.length);\n  }, [email]);\n\n  // Function to update cart state and localStorage\n\n  const updateCart = updatedCart => {\n    setCart(updatedCart);\n    setCartcount(updatedCart.length);\n    localStorage.setItem(`cart_${email}`, JSON.stringify(updatedCart));\n    localStorage.setItem(\"cartcount\", updatedCart.length);\n    window.dispatchEvent(new Event(\"storage\"));\n  };\n\n  // Function to increase item quantity\n\n  const handleIncreaseQuantity = index => {\n    const updatedCart = cart.map((item, i) => i === index ? {\n      ...item,\n      quantity: item.quantity + 1,\n      price: ((item.quantity + 1) * (item.price / item.quantity)).toFixed(2)\n    } : item);\n    updateCart(updatedCart);\n  };\n\n  // Function to decrease item quantity\n\n  const handleDecreaseQuantity = index => {\n    const updatedCart = cart.map((item, i) => {\n      if (i === index) {\n        const newQuantity = item.quantity - 1;\n        if (newQuantity === 0) return null;\n        return {\n          ...item,\n          quantity: newQuantity,\n          price: (item.price / item.quantity * newQuantity).toFixed(2)\n        };\n      }\n      return item;\n    }).filter(item => item !== null);\n    updateCart(updatedCart);\n  };\n\n  // Function to remove item from cart\n\n  const handleRemoveItem = index => {\n    const updatedCart = cart.filter((_, i) => i !== index);\n    updateCart(updatedCart);\n  };\n\n  // Calculate total amount of the cart\n\n  const totalAmount = cart.reduce((total, item) => total + parseFloat(item.price), 0).toFixed(2);\n\n  // Add extra charges for fast delivery\n\n  const extracharge = deliveryType === \"Fast\" ? 50 : 0;\n  const totalAmountWithDelivery = (parseFloat(totalAmount) + extracharge).toFixed(2);\n\n  // Handle placing the order\n\n  const handlePlaceOrder = async () => {\n    const userId = localStorage.getItem(\"USER\");\n    if (!userId || cart.length === 0) {\n      alert(\"Invalid order data. Please log in and add items.\");\n      return;\n    }\n    if (!address.trim() || !city.trim() || !pincode.trim() || !deliveryType) {\n      alert(\"Please fill all delivery details (address, city, pincode, delivery type).\");\n      return;\n    }\n    try {\n      const response = await api.post(\"http://localhost:5000/api/order\", {\n        userId,\n        cartItems: cart,\n        totalAmount: totalAmountWithDelivery,\n        pincode,\n        address,\n        city,\n        serviceDate: new Date(),\n        deliveryType,\n        userEmail: email\n      });\n      const orderData = response.data.order; // ✅ FIXED HERE\n\n      if (response.status === 201 && orderData._id) {\n        const options = {\n          key: \"rzp_test_99IwqPHWTFKkXS\",\n          // ✅ Use real Razorpay key in production\n\n          amount: parseFloat(totalAmountWithDelivery) * 100,\n          // amount in paise\n\n          currency: \"INR\",\n          name: \"Softwizz\",\n          description: \"Order Payment\",\n          handler: async function (razorpayResponse) {\n            try {\n              const paymentRes = await api.put(`/updatepayment/${orderData._id}`, {\n                paymentId: razorpayResponse.razorpay_payment_id,\n                paymentStatus: \"Paid\"\n              });\n              if (paymentRes.status === 200) {\n                alert(\"Payment Successful!\");\n                localStorage.removeItem(`cart_${email}`);\n                localStorage.setItem(\"cartcount\", 0);\n                setCart([]);\n                setCartcount(0);\n                setOrderPlaced(true);\n                window.dispatchEvent(new Event(\"storage\"));\n                navigate(\"/\"); // ✅ Optionally redirect to a Thank You page\n              } else {\n                alert(\"Payment captured but failed to update order.\");\n              }\n            } catch (err) {\n              console.error(\"Payment update failed:\", err);\n              alert(\"Payment succeeded but order update failed.\");\n            }\n          },\n          prefill: {\n            name: address,\n            email: email,\n            contact: \"9999999999\" // Optional\n          },\n          theme: {\n            color: \"#3399cc\"\n          }\n        };\n        const rzp = new window.Razorpay(options);\n        rzp.open();\n      } else {\n        alert(\"Failed to create order. Try again.\");\n      }\n    } catch (error) {\n      console.error(\"Order placement error:\", error);\n      alert(\"Something went wrong. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addtocart-container py-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkout-steps mb-4\",\n      children: [\"Cart\", \"Address\", \"Payment\", \"Summary\"].map((label, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${step === idx ? \"active\" : step > idx ? \"completed\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: idx + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 7\n    }, this), step === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: cart.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card cart-card shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image,\n                className: \"card-img-top\",\n                style: {\n                  height: \"180px\",\n                  objectFit: \"cover\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 798,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 810,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [\"\\u20B9\", item.price, \" \\xD7 \", item.quantity]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 812,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-success btn-sm\",\n                    onClick: () => handleIncreaseQuantity(index),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 820,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-warning btn-sm text-white\",\n                    onClick: () => handleDecreaseQuantity(index),\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 832,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-danger btn-sm\",\n                    onClick: () => handleRemoveItem(index),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 844,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 818,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card p-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Order Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group list-group-flush\",\n            children: [cart.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item d-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [item.name, \" \\xD7 \", item.quantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 883,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\u20B9\", item.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 881,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item fw-bold d-flex justify-content-between border-top\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\u20B9\", totalAmount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 891,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 877,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mt-3 w-100\",\n            disabled: cart.length === 0,\n            onClick: () => setStep(1),\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 9\n    }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Delivery Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control my-2\",\n          placeholder: \"Address\",\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control my-2\",\n          placeholder: \"City\",\n          value: city,\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control my-2\",\n          placeholder: \"Pincode\",\n          value: pincode,\n          onChange: e => setPincode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control my-2\",\n          value: deliveryType,\n          onChange: e => setDeliveryType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Delivery Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Fast\",\n            children: \"Fast (\\u20B950, 2 Days)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Slow\",\n            children: \"Normal (Free, 4 Days)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 984,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary w-100\",\n          onClick: () => {\n            if (address && city && pincode && deliveryType) {\n              setStep(2);\n            } else {\n              alert(\"Please fill all fields!\");\n            }\n          },\n          children: \"Continue to Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary w-100 mt-2\",\n          onClick: () => setStep(0),\n          children: \"Back to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 9\n    }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Simulated payment method (Cash/UPI etc)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark\",\n        onClick: () => setStep(3),\n        children: \"Continue to Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1043,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary mt-2\",\n        onClick: () => setStep(1),\n        children: \"Back to Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1045,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 9\n    }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Order Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: \\u20B9\", totalAmountWithDelivery]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1064,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: handlePlaceOrder,\n        children: \"Place Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1066,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary mt-2\",\n        onClick: () => setStep(2),\n        children: \"Back to Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1060,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 753,\n    columnNumber: 5\n  }, this);\n};\n_s(Addtocart, \"4lil7nlaLETM92A/pOim1awq9MI=\", false, function () {\n  return [useNavigate];\n});\n_c = Addtocart;\nexport default Addtocart;\nvar _c;\n$RefreshReg$(_c, \"Addtocart\");","map":{"version":3,"names":["useEffect","useState","useNavigate","api","jsxDEV","_jsxDEV","Addtocart","_s","cart","setCart","cartcount","setCartcount","orderplaced","setOrderPlaced","deliveryType","setDeliveryType","address","setAddress","city","setCity","pincode","setPincode","step","setStep","navigate","email","localStorage","getItem","user","role","console","log","alert","storedCart","JSON","parse","length","updateCart","updatedCart","setItem","stringify","window","dispatchEvent","Event","handleIncreaseQuantity","index","map","item","i","quantity","price","toFixed","handleDecreaseQuantity","newQuantity","filter","handleRemoveItem","_","totalAmount","reduce","total","parseFloat","extracharge","totalAmountWithDelivery","handlePlaceOrder","userId","trim","response","post","cartItems","serviceDate","Date","userEmail","orderData","data","order","status","_id","options","key","amount","currency","name","description","handler","razorpayResponse","paymentRes","put","paymentId","razorpay_payment_id","paymentStatus","removeItem","err","error","prefill","contact","theme","color","rzp","Razorpay","open","className","children","label","idx","fileName","_jsxFileName","lineNumber","columnNumber","src","image","style","height","objectFit","onClick","disabled","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/satyam/Desktop/FinalProject/frontend/src/components/ViewAddtocart.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\"; // ✅ Import axios\r\n\r\n// const Addtocart = () => {\r\n//   const [cart, setCart] = useState([]);\r\n//   const [orderPlace, setOrderPlace] = useState(false);\r\n//   const [cartCount, setCartCount] = useState(0);\r\n//   const [deliveryType, setDeliveryType] = useState(\"Normal\");\r\n//   const [address, setAddress] = useState(\"\");\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [pincode, setPincode] = useState(\"\");\r\n//   const [step, setStep] = useState(0);\r\n//   const [finalAmount, setFinalAmount] = useState(0);\r\n//   const navigate = useNavigate();\r\n\r\n//   const email = localStorage.getItem(\"email\") || \"guest\";\r\n\r\n//   useEffect(() => {\r\n//     const storedCart = JSON.parse(localStorage.getItem(`cart_${email}`)) || [];\r\n//     setCart(storedCart);\r\n//     setCartCount(storedCart.length);\r\n//   }, [email]);\r\n\r\n//   const updateCart = (updatedCart) => {\r\n//     setCart(updatedCart);\r\n//     setCartCount(updatedCart.length);\r\n//     localStorage.setItem(`cart_${email}`, JSON.stringify(updatedCart));\r\n//     localStorage.setItem(\"cartcount\", updatedCart.length);\r\n//     window.dispatchEvent(new Event(\"storage\"));\r\n//   };\r\n\r\n//   const handleIncreaseQuantity = (index) => {\r\n//     const updatedCart = cart.map((item, i) =>\r\n//       i === index ? { ...item, quantity: item.quantity + 1 } : item\r\n//     );\r\n//     updateCart(updatedCart);\r\n//   };\r\n\r\n//   const handleDecreaseQuantity = (index) => {\r\n//     const updatedCart = cart\r\n//       .map((item, i) =>\r\n//         i === index && item.quantity > 1\r\n//           ? { ...item, quantity: item.quantity - 1 }\r\n//           : item\r\n//       )\r\n//       .filter((item) => item.quantity > 0);\r\n\r\n//     updateCart(updatedCart);\r\n//   };\r\n\r\n//   const handleRemoveItem = (index) => {\r\n//     const updatedCart = cart.filter((_, i) => i !== index);\r\n//     updateCart(updatedCart);\r\n//   };\r\n\r\n//   const totalAmount = cart\r\n//     .reduce((total, item) => total + item.price * item.quantity, 0)\r\n//     .toFixed(2);\r\n\r\n//   const extraCharge = deliveryType === \"Fast\" ? 50 : 0;\r\n//   const totalAmountWithDelivery = parseFloat(totalAmount) + extraCharge;\r\n\r\n//   const getServiceDate = () => {\r\n//     const date = new Date();\r\n//     date.setDate(date.getDate() + (deliveryType === \"Fast\" ? 1 : 3));\r\n//     return date;\r\n//   };\r\n\r\n//   const handlePlaceOrder = async () => {\r\n//     const userId = localStorage.getItem(\"USER\");\r\n\r\n//     if (!userId || cart.length === 0) {\r\n//       alert(\"Invalid order data. Please log in and add items.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!address.trim() || !city.trim() || !pincode.trim() || !deliveryType) {\r\n//       alert(\"Please fill all delivery details (address, city, pincode, delivery type).\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:5000/api/order\", {\r\n//         userId,\r\n//         cartItems: cart,\r\n//         totalAmount: totalAmountWithDelivery,\r\n//         pincode,\r\n//         address,\r\n//         city,\r\n//         serviceDate: getServiceDate(),\r\n//         deliveryType,\r\n//         userEmail: email,\r\n//       });\r\n\r\n//       const orderData = response.data.order;\r\n\r\n//       if (response.status === 201 && orderData._id) {\r\n//         const options = {\r\n//           key: \"rzp_test_99IwqPHWTFKkXS\",\r\n//           amount: parseFloat(totalAmountWithDelivery) * 100,\r\n//           currency: \"INR\",\r\n//           name: \"Softwizz\",\r\n//           description: \"Order Payment\",\r\n//           handler: async function (razorpayResponse) {\r\n//             try {\r\n//               const paymentRes = await axios.put(\r\n//                 `http://localhost:5000/api/updatepayment/${orderData._id}`,\r\n//                 {\r\n//                   paymentId: razorpayResponse.razorpay_payment_id,\r\n//                   paymentStatus: \"Paid\",\r\n//                 }\r\n//               );\r\n\r\n//               if (paymentRes.status === 200) {\r\n//                 alert(\"Payment Successful!\");\r\n//                 localStorage.removeItem(`cart_${email}`);\r\n//                 localStorage.setItem(\"cartcount\", 0);\r\n//                 setCart([]);\r\n//                 setCartCount(0);\r\n//                 setOrderPlace(true);\r\n//                 window.dispatchEvent(new Event(\"storage\"));\r\n//                 navigate(\"/\");\r\n//               } else {\r\n//                 alert(\"Payment captured but failed to update order.\");\r\n//               }\r\n//             } catch (err) {\r\n//               console.error(\"Payment update failed:\", err);\r\n//               alert(\"Payment succeeded but order update failed.\");\r\n//             }\r\n//           },\r\n//           prefill: {\r\n//             name: address,\r\n//             email: email,\r\n//             contact: \"9999999999\",\r\n//           },\r\n//           theme: {\r\n//             color: \"#3399cc\",\r\n//           },\r\n//         };\r\n\r\n//         const rzp = new window.Razorpay(options);\r\n//         rzp.open();\r\n//       } else {\r\n//         alert(\"Failed to create order. Try again.\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Order placement error:\", error);\r\n//       alert(\"Something went wrong. Please try again.\");\r\n//     }\r\n//   };\r\n  \r\n\r\n//   return (\r\n//     <div className=\"addtocart-container py-5\" style={{ padding: \"20px\" }}>\r\n//       {/* Internal CSS */}\r\n//       <style>{`\r\n//         .checkout-steps {\r\n//           display: flex;\r\n//           justify-content: space-between;\r\n//           margin-bottom: 30px;\r\n//           flex-wrap: wrap;\r\n//         }\r\n//         .step {\r\n//           text-align: center;\r\n//           flex: 1;\r\n//           position: relative;\r\n//           padding: 10px;\r\n//           min-width: 80px;\r\n//         }\r\n//         .step::after {\r\n//           content: '';\r\n//           position: absolute;\r\n//           top: 20px;\r\n//           right: -50%;\r\n//           width: 100%;\r\n//           height: 4px;\r\n//           background-color: #ddd;\r\n//           z-index: 0;\r\n//         }\r\n//         .step:last-child::after {\r\n//           display: none;\r\n//         }\r\n//         .step-circle {\r\n//           width: 40px;\r\n//           height: 40px;\r\n//           margin: 0 auto;\r\n//           line-height: 40px;\r\n//           border-radius: 50%;\r\n//           font-weight: bold;\r\n//           color: white;\r\n//           background-color: #ccc;\r\n//           z-index: 1;\r\n//           position: relative;\r\n//           transition: all 0.3s ease;\r\n//         }\r\n//         .step-label {\r\n//           margin-top: 10px;\r\n//           font-weight: 500;\r\n//           font-size: 14px;\r\n//         }\r\n//         .step.active .step-circle {\r\n//           background-color: #007bff;\r\n//           box-shadow: 0 0 10px rgba(0, 123, 255, 0.6);\r\n//         }\r\n//         .step.completed .step-circle {\r\n//           background-color: #28a745;\r\n//           box-shadow: 0 0 10px rgba(40, 167, 69, 0.6);\r\n//         }\r\n//         @media (max-width: 768px) {\r\n//           .step {\r\n//             flex: none;\r\n//             width: 25%;\r\n//           }\r\n//           .step-label {\r\n//             font-size: 12px;\r\n//           }\r\n//         }\r\n//       `}</style>\r\n  \r\n//       {/* Step Indicators */}\r\n//       <div className=\"checkout-steps\">\r\n//         {[\"Cart\", \"Address\", \"Payment\", \"Summary\"].map((label, idx) => (\r\n//           <div\r\n//             key={idx}\r\n//             className={`step ${step === idx ? \"active\" : step > idx ? \"completed\" : \"\"}`}\r\n//           >\r\n//             <div className=\"step-circle\">{idx + 1}</div>\r\n//             <div className=\"step-label\">{label}</div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n  \r\n//       {/* Step 0 - Cart */}\r\n//       {step === 0 && (\r\n//         <div className=\"row\">\r\n//           <div className=\"col-md-8\">\r\n//             <h4>Your Cart</h4>\r\n//             <div className=\"row\">\r\n//               {cart.map((item, index) => (\r\n//                 <div key={index} className=\"col-md-6 mb-4\">\r\n//                   <div className=\"card cart-card shadow-sm\">\r\n//                     <img\r\n//                       src={item.image}\r\n//                       className=\"card-img-top\"\r\n//                       style={{ height: \"180px\", objectFit: \"cover\" }}\r\n//                       alt={item.name}\r\n//                     />\r\n//                     <div className=\"card-body\">\r\n//                       <h5 className=\"card-title\">{item.name}</h5>\r\n//                       <p className=\"card-text\">\r\n//   ₹{item.price} × {item.quantity} = ₹{item.price * item.quantity}\r\n// </p>\r\n\r\n \r\n//                       <div className=\"d-flex justify-content-between\">\r\n//                         <button\r\n//                           className=\"btn btn-success btn-sm\"\r\n//                           onClick={() => handleIncreaseQuantity(index)}\r\n//                         >\r\n//                           +\r\n//                         </button>\r\n//                         <button\r\n//                           className=\"btn btn-warning btn-sm text-white\"\r\n//                           onClick={() => handleDecreaseQuantity(index)}\r\n//                         >\r\n//                           -\r\n//                         </button>\r\n//                         <button\r\n//                           className=\"btn btn-danger btn-sm\"\r\n//                           onClick={() => handleRemoveItem(index)}\r\n//                         >\r\n//                           Remove\r\n//                         </button>\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n  \r\n//           <div className=\"col-md-4\">\r\n//             <div className=\"card p-3 shadow\">\r\n//               <h5>Order Summary</h5>\r\n//               <ul className=\"list-group list-group-flush\">\r\n//                 {cart.map((item, idx) => (\r\n//                   <li key={idx} className=\"list-group-item d-flex justify-content-between\">\r\n//                     <span>{item.name} × {item.quantity}</span>\r\n                    \r\n\r\n\r\n\r\n//                     <span>₹{item.price}</span>\r\n//                   </li>\r\n//                 ))}\r\n//                 <li className=\"list-group-item fw-bold d-flex justify-content-between border-top\">\r\n//                   <span>Total</span>\r\n//                   <span>₹{totalAmount}</span>\r\n//                 </li>\r\n//               </ul>\r\n//               <button\r\n//                 className=\"btn btn-primary mt-3 w-100\"\r\n//                 disabled={cart.length === 0}\r\n//                 onClick={() => setStep(1)}\r\n//               >\r\n//                 Continue\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n  \r\n//       {/* Step 1 - Address */}\r\n//       {step === 1 && (\r\n//         <div className=\"row justify-content-center\">\r\n//           <div className=\"col-md-6\">\r\n//             <h4>Delivery Address</h4>\r\n//             <input\r\n//               className=\"form-control my-2\"\r\n//               placeholder=\"Address\"\r\n//               value={address}\r\n//               onChange={(e) => setAddress(e.target.value)}\r\n//             />\r\n//             <input\r\n//               className=\"form-control my-2\"\r\n//               placeholder=\"City\"\r\n//               value={city}\r\n//               onChange={(e) => setCity(e.target.value)}\r\n//             />\r\n//             <input\r\n//               className=\"form-control my-2\"\r\n//               placeholder=\"Pincode\"\r\n//               value={pincode}\r\n//               onChange={(e) => setPincode(e.target.value)}\r\n//             />\r\n//             <select\r\n//               className=\"form-control my-2\"\r\n//               value={deliveryType}\r\n//               onChange={(e) => setDeliveryType(e.target.value)}\r\n//             >\r\n//               <option value=\"\">Select Delivery Type</option>\r\n//               <option value=\"Fast\">Fast (₹50, 1 Days)</option>\r\n//               <option value=\"Slow\">Normal (Free, 3 Days)</option>\r\n//             </select>\r\n  \r\n//             <button\r\n//               className=\"btn btn-primary w-100\"\r\n//               onClick={() => {\r\n//                 if (address && city && pincode && deliveryType) {\r\n//                   setStep(2);\r\n//                 } else {\r\n//                   alert(\"Please fill all fields!\");\r\n//                 }\r\n//               }}\r\n//             >\r\n//               Continue to Payment\r\n//             </button> \r\n  \r\n//             <button className=\"btn btn-secondary w-100 mt-2\" onClick={() => setStep(0)}>\r\n//               Back to Cart\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n  \r\n//       {/* Step 2 - Payment */}\r\n//       {step === 2 && (\r\n//         <div className=\"text-center\">\r\n//           <h4>Payment</h4>\r\n//           <p>Simulated payment method (Cash/UPI etc)</p>\r\n//           <button\r\n//   className=\"btn btn-dark\"\r\n//   onClick={() => {\r\n//     const extraCharge = deliveryType === \"Fast\" ? 50 : 0;\r\n//     setFinalAmount(parseFloat(totalAmount) + extraCharge); // 👈 Add this\r\n//     setStep(3);\r\n//   }}\r\n// >\r\n//   Continue to Summary\r\n// </button>\r\n\r\n//           <br />\r\n//           <button className=\"btn btn-secondary mt-2\" onClick={() => setStep(1)}>\r\n//             Back to Address\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n  \r\n//       {/* Step 3 - Summary */}\r\n//       {step === 3 && (\r\n//         <div className=\"text-center\">\r\n//           <h4>Order Summary</h4>\r\n//           <p>Total: ₹{finalAmount}</p>\r\n//           <button className=\"btn btn-success\" onClick={handlePlaceOrder}>\r\n//             Place Order\r\n//           </button>\r\n//           <br />\r\n//           <button className=\"btn btn-secondary mt-2\" onClick={() => setStep(2)}>\r\n//             Back to Payment\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }  \r\n\r\n// export default Addtocart;\r\n\r\n\r\n\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// import \"./Addtocart.css\";\r\n\r\nimport api from \"../axios\";\r\n\r\n\r\nconst Addtocart = () => {\r\n\r\n  \r\n\r\n  const [cart, setCart] = useState([]);\r\n\r\n  const [cartcount, setCartcount] = useState(0);\r\n\r\n  const [orderplaced, setOrderPlaced] = useState(false);\r\n\r\n  const [deliveryType, setDeliveryType] = useState(\"\");\r\n\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  const [city, setCity] = useState(\"\");\r\n\r\n  const [pincode, setPincode] = useState(\"\");\r\n\r\n  const [step, setStep] = useState(0);\r\n\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const email = localStorage.getItem(\"EMAIL\") || \"guest\";\r\n\r\n\r\n  // Ensure the user is logged in and is not an admin\r\n\r\n  useEffect(() => {\r\n\r\n    const user = localStorage.getItem(\"USER\");\r\n\r\n    const role = localStorage.getItem(\"Role\");\r\n\r\n\r\n    if (!user || role === \"admin\") {\r\n\r\n      console.log(\"Role in localStorage:\", role);  // Debugging: Check the role\r\n\r\n      alert(\"Access denied! Please login as a valid user.\");\r\n\r\n      navigate(\"/login\");\r\n\r\n    }\r\n\r\n  }, [navigate]);\r\n\r\n\r\n  // Load cart from localStorage on initial render\r\n\r\n  useEffect(() => {\r\n\r\n    const storedCart = JSON.parse(localStorage.getItem(`cart_${email}`)) || [];\r\n\r\n    setCart(storedCart);\r\n\r\n    setCartcount(storedCart.length);\r\n\r\n  }, [email]);\r\n\r\n\r\n  // Function to update cart state and localStorage\r\n\r\n  const updateCart = (updatedCart) => {\r\n\r\n    setCart(updatedCart);\r\n\r\n    setCartcount(updatedCart.length);\r\n\r\n    localStorage.setItem(`cart_${email}`, JSON.stringify(updatedCart));\r\n\r\n    localStorage.setItem(\"cartcount\", updatedCart.length);\r\n\r\n    window.dispatchEvent(new Event(\"storage\"));\r\n\r\n  };\r\n\r\n\r\n  // Function to increase item quantity\r\n\r\n  const handleIncreaseQuantity = (index) => {\r\n\r\n    const updatedCart = cart.map((item, i) =>\r\n\r\n      i === index\r\n\r\n        ? {\r\n\r\n            ...item,\r\n\r\n            quantity: item.quantity + 1,\r\n\r\n            price: ((item.quantity + 1) * (item.price / item.quantity)).toFixed(2),\r\n\r\n          }\r\n\r\n        : item\r\n\r\n    );\r\n\r\n    updateCart(updatedCart);\r\n\r\n  };\r\n\r\n\r\n  // Function to decrease item quantity\r\n\r\n  const handleDecreaseQuantity = (index) => {\r\n\r\n    const updatedCart = cart\r\n\r\n      .map((item, i) => {\r\n\r\n        if (i === index) {\r\n\r\n          const newQuantity = item.quantity - 1;\r\n\r\n          if (newQuantity === 0) return null;\r\n\r\n          return {\r\n\r\n            ...item,\r\n\r\n            quantity: newQuantity,\r\n\r\n            price: ((item.price / item.quantity) * newQuantity).toFixed(2),\r\n\r\n          };\r\n\r\n        }\r\n\r\n        return item;\r\n\r\n      })\r\n\r\n      .filter((item) => item !== null);\r\n\r\n    updateCart(updatedCart);\r\n\r\n  };\r\n\r\n\r\n  // Function to remove item from cart\r\n\r\n  const handleRemoveItem = (index) => {\r\n\r\n    const updatedCart = cart.filter((_, i) => i !== index);\r\n\r\n    updateCart(updatedCart);\r\n\r\n  };\r\n\r\n\r\n  // Calculate total amount of the cart\r\n\r\n  const totalAmount = cart\r\n\r\n    .reduce((total, item) => total + parseFloat(item.price), 0)\r\n\r\n    .toFixed(2);\r\n\r\n\r\n  // Add extra charges for fast delivery\r\n\r\n  const extracharge = deliveryType === \"Fast\" ? 50 : 0;\r\n\r\n  const totalAmountWithDelivery = (parseFloat(totalAmount) + extracharge).toFixed(2);\r\n\r\n\r\n  // Handle placing the order\r\n\r\n  const handlePlaceOrder = async () => {\r\n\r\n    const userId = localStorage.getItem(\"USER\");\r\n\r\n  \r\n\r\n    if (!userId || cart.length === 0) {\r\n\r\n      alert(\"Invalid order data. Please log in and add items.\");\r\n\r\n      return;\r\n\r\n    }\r\n\r\n  \r\n\r\n    if (!address.trim() || !city.trim() || !pincode.trim() || !deliveryType) {\r\n\r\n      alert(\"Please fill all delivery details (address, city, pincode, delivery type).\");\r\n\r\n      return;\r\n\r\n    }\r\n\r\n  \r\n\r\n    try {\r\n\r\n      const response = await api.post(\"http://localhost:5000/api/order\", {\r\n\r\n        userId,\r\n\r\n        cartItems: cart,\r\n\r\n        totalAmount: totalAmountWithDelivery,\r\n\r\n        pincode,\r\n\r\n        address,\r\n\r\n        city,\r\n\r\n        serviceDate: new Date(),\r\n\r\n        deliveryType,\r\n\r\n        userEmail: email,\r\n\r\n      });\r\n\r\n  \r\n\r\n      const orderData = response.data.order; // ✅ FIXED HERE\r\n\r\n  \r\n\r\n      if (response.status === 201 && orderData._id) {\r\n\r\n        const options = {\r\n\r\n          key: \"rzp_test_99IwqPHWTFKkXS\", // ✅ Use real Razorpay key in production\r\n\r\n          amount: parseFloat(totalAmountWithDelivery) * 100, // amount in paise\r\n\r\n          currency: \"INR\",\r\n\r\n          name: \"Softwizz\",\r\n\r\n          description: \"Order Payment\",\r\n\r\n          handler: async function (razorpayResponse) {\r\n\r\n            try {\r\n\r\n              const paymentRes = await api.put(`/updatepayment/${orderData._id}`, {\r\n\r\n                paymentId: razorpayResponse.razorpay_payment_id,\r\n\r\n                paymentStatus: \"Paid\",\r\n\r\n              });\r\n\r\n  \r\n\r\n              if (paymentRes.status === 200) {\r\n\r\n                alert(\"Payment Successful!\");\r\n\r\n                localStorage.removeItem(`cart_${email}`);\r\n\r\n                localStorage.setItem(\"cartcount\", 0);\r\n\r\n                setCart([]);\r\n\r\n                setCartcount(0);\r\n\r\n                setOrderPlaced(true);\r\n\r\n                window.dispatchEvent(new Event(\"storage\"));\r\n\r\n                navigate(\"/\"); // ✅ Optionally redirect to a Thank You page\r\n\r\n              } else {\r\n\r\n                alert(\"Payment captured but failed to update order.\");\r\n\r\n              }\r\n\r\n            } catch (err) {\r\n\r\n              console.error(\"Payment update failed:\", err);\r\n\r\n              alert(\"Payment succeeded but order update failed.\");\r\n\r\n            }\r\n\r\n          },\r\n\r\n          prefill: {\r\n\r\n            name: address,\r\n\r\n            email: email,\r\n\r\n            contact: \"9999999999\", // Optional\r\n\r\n          },\r\n\r\n          theme: {\r\n\r\n            color: \"#3399cc\",\r\n\r\n          },\r\n\r\n        };\r\n\r\n  \r\n\r\n        const rzp = new window.Razorpay(options);\r\n\r\n        rzp.open();\r\n\r\n      } else {\r\n\r\n        alert(\"Failed to create order. Try again.\");\r\n\r\n      }\r\n\r\n    } catch (error) {\r\n\r\n      console.error(\"Order placement error:\", error);\r\n\r\n      alert(\"Something went wrong. Please try again.\");\r\n\r\n    }\r\n\r\n  };\r\n\r\n      return (\r\n\r\n    <div className=\"addtocart-container py-5\">\r\n\r\n      {/* Step Indicators */}\r\n\r\n      <div className=\"checkout-steps mb-4\">\r\n\r\n        {[\"Cart\", \"Address\", \"Payment\", \"Summary\"].map((label, idx) => (\r\n\r\n          <div\r\n\r\n            key={idx}\r\n\r\n            className={`step ${step === idx ? \"active\" : step > idx ? \"completed\" : \"\"}`}\r\n\r\n          >\r\n\r\n            <div className=\"step-circle\">{idx + 1}</div>\r\n\r\n            <div className=\"step-label\">{label}</div>\r\n\r\n          </div>\r\n\r\n        ))}\r\n\r\n      </div>\r\n\r\n\r\n      {/* Step 0 - Cart */}\r\n\r\n      {step === 0 && (\r\n\r\n        <div className=\"row\">\r\n\r\n          <div className=\"col-md-8\">\r\n\r\n            <h4>Your Cart</h4>\r\n\r\n            <div className=\"row\">\r\n\r\n              {cart.map((item, index) => (\r\n\r\n                <div key={index} className=\"col-md-6 mb-4\">\r\n\r\n                  <div className=\"card cart-card shadow-sm\">\r\n\r\n                    <img\r\n\r\n                      src={item.image}\r\n\r\n                      className=\"card-img-top\"\r\n\r\n                      style={{ height: \"180px\", objectFit: \"cover\" }}\r\n\r\n                    />\r\n\r\n                    <div className=\"card-body\">\r\n\r\n                      <h5 className=\"card-title\">{item.name}</h5>\r\n\r\n                      <p className=\"card-text\">\r\n\r\n                        ₹{item.price} × {item.quantity}\r\n\r\n                      </p>\r\n\r\n                      <div className=\"d-flex justify-content-between\">\r\n\r\n                        <button\r\n\r\n                          className=\"btn btn-success btn-sm\"\r\n\r\n                          onClick={() => handleIncreaseQuantity(index)}\r\n\r\n                        >\r\n\r\n                          +\r\n\r\n                        </button>\r\n\r\n                        <button\r\n\r\n                          className=\"btn btn-warning btn-sm text-white\"\r\n\r\n                          onClick={() => handleDecreaseQuantity(index)}\r\n\r\n                        >\r\n\r\n                          -\r\n\r\n                        </button>\r\n\r\n                        <button\r\n\r\n                          className=\"btn btn-danger btn-sm\"\r\n\r\n                          onClick={() => handleRemoveItem(index)}\r\n\r\n                        >\r\n\r\n                          Remove\r\n\r\n                        </button>\r\n\r\n                      </div>\r\n\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              ))}\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n          <div className=\"col-md-4\">\r\n\r\n            <div className=\"card p-3\">\r\n\r\n              <h5>Order Summary</h5>\r\n\r\n              <ul className=\"list-group list-group-flush\">\r\n\r\n                {cart.map((item, idx) => (\r\n\r\n                  <li key={idx} className=\"list-group-item d-flex justify-content-between\">\r\n\r\n                    <span>{item.name} × {item.quantity}</span>\r\n\r\n                    <span>₹{item.price}</span>\r\n\r\n                  </li>\r\n\r\n                ))}\r\n\r\n                <li className=\"list-group-item fw-bold d-flex justify-content-between border-top\">\r\n\r\n                  <span>Total</span>\r\n\r\n                  <span>₹{totalAmount}</span>\r\n\r\n                </li>\r\n\r\n              </ul>\r\n\r\n              <button\r\n\r\n                className=\"btn btn-primary mt-3 w-100\"\r\n\r\n                disabled={cart.length === 0}\r\n\r\n                onClick={() => setStep(1)}\r\n\r\n              >\r\n\r\n                Continue\r\n\r\n              </button>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      )}\r\n\r\n\r\n      {/* Step 1 - Address */}\r\n\r\n      {step === 1 && (\r\n\r\n        <div className=\"row justify-content-center\">\r\n\r\n          <div className=\"col-md-6\">\r\n\r\n            <h4>Delivery Address</h4>\r\n\r\n            <input\r\n\r\n              className=\"form-control my-2\"\r\n\r\n              placeholder=\"Address\"\r\n\r\n              value={address}\r\n\r\n              onChange={(e) => setAddress(e.target.value)}\r\n\r\n            />\r\n\r\n            <input\r\n\r\n              className=\"form-control my-2\"\r\n\r\n              placeholder=\"City\"\r\n\r\n              value={city}\r\n\r\n              onChange={(e) => setCity(e.target.value)}\r\n\r\n            />\r\n\r\n            <input\r\n\r\n              className=\"form-control my-2\"\r\n\r\n              placeholder=\"Pincode\"\r\n\r\n              value={pincode}\r\n\r\n              onChange={(e) => setPincode(e.target.value)}\r\n\r\n            />\r\n\r\n            <select\r\n\r\n              className=\"form-control my-2\"\r\n\r\n              value={deliveryType}\r\n\r\n              onChange={(e) => setDeliveryType(e.target.value)}\r\n\r\n            >\r\n\r\n              <option value=\"\">Select Delivery Type</option>\r\n\r\n              <option value=\"Fast\">Fast (₹50, 2 Days)</option>\r\n\r\n              <option value=\"Slow\">Normal (Free, 4 Days)</option>\r\n\r\n            </select>\r\n\r\n\r\n            <button\r\n\r\n              className=\"btn btn-primary w-100\"\r\n\r\n              onClick={() => {\r\n\r\n                if (address && city && pincode && deliveryType) {\r\n\r\n                  setStep(2);\r\n\r\n                } else {\r\n\r\n                  alert(\"Please fill all fields!\");\r\n\r\n                }\r\n\r\n              }}\r\n\r\n            >\r\n\r\n              Continue to Payment\r\n\r\n            </button>\r\n\r\n\r\n            <button className=\"btn btn-secondary w-100 mt-2\" onClick={() => setStep(0)}>\r\n\r\n              Back to Cart\r\n\r\n            </button>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      )}\r\n\r\n\r\n      {/* Step 2 - Payment */}\r\n\r\n      {step === 2 && (\r\n\r\n        <div className=\"text-center\">\r\n\r\n          <h4>Payment</h4>\r\n\r\n          <p>Simulated payment method (Cash/UPI etc)</p>\r\n\r\n          <button className=\"btn btn-dark\" onClick={() => setStep(3)}>\r\n\r\n            Continue to Summary\r\n\r\n          </button>\r\n\r\n          <br />\r\n\r\n          <button className=\"btn btn-secondary mt-2\" onClick={() => setStep(1)}>\r\n\r\n            Back to Address\r\n\r\n          </button>\r\n\r\n        </div>\r\n\r\n      )}\r\n\r\n\r\n      {/* Step 3 - Summary */}\r\n\r\n      {step === 3 && (\r\n\r\n        <div className=\"text-center\">\r\n\r\n          <h4>Order Summary</h4>\r\n\r\n          <p>Total: ₹{totalAmountWithDelivery}</p>\r\n\r\n          <button className=\"btn btn-success\" onClick={handlePlaceOrder}>\r\n\r\n            Place Order\r\n\r\n          </button>\r\n\r\n          <br />\r\n\r\n          <button className=\"btn btn-secondary mt-2\" onClick={() => setStep(2)}>\r\n\r\n            Back to Payment\r\n\r\n          </button>\r\n\r\n        </div>\r\n\r\n      )}\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n};\r\n\r\n\r\nexport default Addtocart;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;;AAEA,OAAOC,GAAG,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAItB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM,CAACiB,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}