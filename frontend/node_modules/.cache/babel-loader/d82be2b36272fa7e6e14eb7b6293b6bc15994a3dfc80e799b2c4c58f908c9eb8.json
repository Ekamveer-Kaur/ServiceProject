{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satyam\\\\Desktop\\\\FinalProject\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const Login = () => {\n//   const navigate = useNavigate();\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [captcha, setCaptcha] = useState(generateCaptcha()); // Static CAPTCHA\n//   const [userCaptcha, setUserCaptcha] = useState(\"\");\n\n//   function generateCaptcha() {\n//     const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"; // A-Z, a-z, 0-9\n//     let captcha = \"\";\n//     for (let i = 0; i < 6; i++) { // 6-character CAPTCHA\n//       captcha += chars.charAt(Math.floor(Math.random() * chars.length));\n//     }\n//     return captcha;\n//   }\n\n//   const refreshCaptcha = () => {\n//     setCaptcha(generateCaptcha()); // New CAPTCHA on refresh button click\n//     setUserCaptcha(\"\"); // Clear input field\n//   };\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     // ✅ CAPTCHA validation fix\n//     if (!userCaptcha || userCaptcha.trim().toUpperCase() !== captcha.trim().toUpperCase()) {\n//       alert(\"❌ CAPTCHA incorrect! Please try again.\");\n//       setUserCaptcha(\"\"); // Clear input field\n//       refreshCaptcha(); // Generate new CAPTCHA\n//       return; // ✅ Stop function execution if CAPTCHA is incorrect\n//     }\n\n//     // If CAPTCHA is correct, proceed with login request\n//     const obj = JSON.stringify({ email, password });\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/login\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: obj,\n//       });\n\n//       if (response.ok) {\n//         const data = await response.json();\n//         alert(\"✅ Successfully logged in!\");\n\n//         localStorage.setItem(\"token\", data.token);\n//         localStorage.setItem(\"name\", data.name);\n//         localStorage.setItem(\"email\", data.email);\n//         localStorage.setItem(\"role\", data.role); // Save role\n//         console.log(\"Login Response:\", data); \n//         // Navigate based on role\n\n//           navigate(\"/\");\n\n//       } else {\n//         alert(\"❌ Invalid credentials! Try again.\");\n//       }\n//     } catch (err) {\n//       console.log(err);\n//       alert(\"❌ Something went wrong. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         display: \"flex\",\n//         justifyContent: \"center\",\n//         alignItems: \"center\",\n//         height: \"100vh\",\n//         background: \"linear-gradient(to right, #a18cd1, #fbc2eb)\",\n//       }}\n//     >\n//       <div\n//         style={{\n//           width: \"350px\",\n//           padding: \"30px\",\n//           background: \"rgba(255, 255, 255, 0.9)\",\n//           boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\n//           borderRadius: \"10px\",\n//           textAlign: \"center\",\n//         }}\n//       >\n//         <h2\n//           style={{\n//             fontSize: \"22px\",\n//             fontWeight: \"bold\",\n//             marginBottom: \"20px\",\n//             color: \"#444\",\n//           }}\n//         >\n//           Welcome Back!\n//         </h2>\n//         <form onSubmit={handleSubmit}>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <input\n//               type=\"email\"\n//               placeholder=\"Enter Email\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               required\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"12px\",\n//                 fontSize: \"16px\",\n//                 border: \"1px solid #ccc\",\n//                 borderRadius: \"5px\",\n//                 transition: \"0.3s\",\n//               }}\n//             />\n//           </div>\n\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Enter Password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               required\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"12px\",\n//                 fontSize: \"16px\",\n//                 border: \"1px solid #ccc\",\n//                 borderRadius: \"5px\",\n//                 transition: \"0.3s\",\n//               }}\n//             />\n//           </div>\n\n//    {/* CAPTCHA Section */}\n//    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", gap: \"10px\", marginBottom: \"15px\" }}>\n//             <p\n//               style={{\n//                 fontSize: \"18px\",\n//                 fontWeight: \"bold\",\n//                 background: \"#eee\",\n//                 padding: \"5px 10px\",\n//                 borderRadius: \"5px\",\n//                 letterSpacing: \"3px\",\n//               }}\n//             >\n//               {captcha}\n//             </p>\n//             <button type=\"button\" onClick={refreshCaptcha} style={{ background: \"none\", border: \"none\", cursor: \"pointer\" }}>\n//             <i class=\"fa-solid fa-rotate\"></i>\n//             </button>\n//           </div>\n//           <div style={{ marginBottom: \"15px\" }}>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter CAPTCHA\"\n//               value={userCaptcha}\n//               onChange={(e) => setUserCaptcha(e.target.value)}\n//               required\n//               style={{\n//                 width: \"100%\",\n//                 padding: \"12px\",\n//                 fontSize: \"16px\",\n//                 border: \"1px solid #ccc\",\n//                 borderRadius: \"5px\",\n//               }}\n//             />\n//           </div>\n//           <button\n//             type=\"submit\"\n//             style={{\n//               width: \"100%\",\n//               padding: \"12px\",\n//               fontSize: \"16px\",\n//               fontWeight: \"bold\",\n//               background: \"linear-gradient(to right, #ff758c, #ff7eb3)\",\n//               border: \"none\",\n//               borderRadius: \"5px\",\n//               color: \"white\",\n//               cursor: \"pointer\",\n//               transition: \"0.3s\",\n//             }}\n//             onMouseOver={(e) =>\n//               (e.target.style.background =\n//                 \"linear-gradient(to right, #ff7eb3, #ff758c)\")\n//             }\n//             onMouseOut={(e) =>\n//               (e.target.style.background =\n//                 \"linear-gradient(to right, #ff758c, #ff7eb3)\")\n//             }\n//           >\n//             Login\n//           </button>\n//         </form>\n\n//         <p style={{ marginTop: \"10px\", fontSize: \"14px\" }}>\n//           <Link\n//             to=\"/forgot-password\"\n//             style={{\n//               color: \"#ff758c\",\n//               fontWeight: \"bold\",\n//               textDecoration: \"none\",\n//             }}\n//           >\n//             Forgot Password?\n//           </Link>\n//         </p>\n\n//         <p style={{ marginTop: \"10px\", fontSize: \"14px\" }}>\n//           New here?{\" \"}\n//           <Link\n//             to=\"/signup\"\n//             style={{\n//               color: \"#ff758c\",\n//               fontWeight: \"bold\",\n//               textDecoration: \"none\",\n//             }}\n//           >\n//             Create an Account\n//           </Link>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [captcha, setCaptcha] = useState(\"\");\n  const [userCaptcha, setUserCaptcha] = useState(\"\");\n\n  // CAPTCHA generation function\n  const generateCaptcha = () => {\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    return Array.from({\n      length: 6\n    }, () => chars[Math.floor(Math.random() * chars.length)]).join(\"\");\n  };\n\n  // Refresh CAPTCHA\n  const refreshCaptcha = () => {\n    setCaptcha(generateCaptcha());\n    setUserCaptcha(\"\");\n  };\n  useEffect(() => {\n    refreshCaptcha(); // Generate CAPTCHA on mount\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (userCaptcha.trim().toUpperCase() !== captcha.trim().toUpperCase()) {\n      alert(\"❌ CAPTCHA incorrect! Please try again.\");\n      refreshCaptcha();\n      return;\n    }\n    const obj = JSON.stringify({\n      email,\n      password\n    });\n    try {\n      const response = await fetch(\"http://localhost:5000/api/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: obj\n      });\n      if (response.ok) {\n        var _data$role;\n        const data = await response.json();\n        alert(\"✅ Successfully logged in!\");\n        localStorage.setItem(\"token\", data.token);\n        localStorage.setItem(\"name\", data.name);\n        localStorage.setItem(\"email\", data.email);\n        localStorage.setItem(\"role\", data.role);\n        console.log(\"Login Response:\", data);\n\n        // Navigate based on role\n        if (((_data$role = data.role) === null || _data$role === void 0 ? void 0 : _data$role.toLowerCase()) === \"admin\") {\n          navigate(\"/admin\");\n        } else {\n          navigate(\"/userdashboard\");\n        }\n      } else {\n        alert(\"❌ Invalid credentials! Try again.\");\n      }\n    } catch (err) {\n      console.error(\"Login Error:\", err);\n      alert(\"❌ Something went wrong. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome Back!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"captcha-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"captcha-text\",\n            children: captcha\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: refreshCaptcha,\n            className: \"refresh-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-rotate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter CAPTCHA\",\n          value: userCaptcha,\n          onChange: e => setUserCaptcha(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-btn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/forgot-password\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"New here? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Create an Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"P/VEh9XexxvxvN1SxSqQ6kN7jig=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","email","setEmail","password","setPassword","captcha","setCaptcha","userCaptcha","setUserCaptcha","generateCaptcha","chars","Array","from","length","Math","floor","random","join","refreshCaptcha","handleSubmit","e","preventDefault","trim","toUpperCase","alert","obj","JSON","stringify","response","fetch","method","headers","body","ok","_data$role","data","json","localStorage","setItem","token","name","role","console","log","toLowerCase","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/satyam/Desktop/FinalProject/frontend/src/components/Login.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const Login = () => {\r\n//   const navigate = useNavigate();\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [captcha, setCaptcha] = useState(generateCaptcha()); // Static CAPTCHA\r\n//   const [userCaptcha, setUserCaptcha] = useState(\"\");\r\n\r\n\r\n//   function generateCaptcha() {\r\n//     const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"; // A-Z, a-z, 0-9\r\n//     let captcha = \"\";\r\n//     for (let i = 0; i < 6; i++) { // 6-character CAPTCHA\r\n//       captcha += chars.charAt(Math.floor(Math.random() * chars.length));\r\n//     }\r\n//     return captcha;\r\n//   }\r\n\r\n//   const refreshCaptcha = () => {\r\n//     setCaptcha(generateCaptcha()); // New CAPTCHA on refresh button click\r\n//     setUserCaptcha(\"\"); // Clear input field\r\n//   };\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n  \r\n//     // ✅ CAPTCHA validation fix\r\n//     if (!userCaptcha || userCaptcha.trim().toUpperCase() !== captcha.trim().toUpperCase()) {\r\n//       alert(\"❌ CAPTCHA incorrect! Please try again.\");\r\n//       setUserCaptcha(\"\"); // Clear input field\r\n//       refreshCaptcha(); // Generate new CAPTCHA\r\n//       return; // ✅ Stop function execution if CAPTCHA is incorrect\r\n//     }\r\n  \r\n//     // If CAPTCHA is correct, proceed with login request\r\n//     const obj = JSON.stringify({ email, password });\r\n  \r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/api/login\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: obj,\r\n//       });\r\n  \r\n//       if (response.ok) {\r\n//         const data = await response.json();\r\n//         alert(\"✅ Successfully logged in!\");\r\n        \r\n  \r\n//         localStorage.setItem(\"token\", data.token);\r\n//         localStorage.setItem(\"name\", data.name);\r\n//         localStorage.setItem(\"email\", data.email);\r\n//         localStorage.setItem(\"role\", data.role); // Save role\r\n//         console.log(\"Login Response:\", data); \r\n//         // Navigate based on role\r\n       \r\n//           navigate(\"/\");\r\n        \r\n//       } else {\r\n//         alert(\"❌ Invalid credentials! Try again.\");\r\n//       }\r\n//     } catch (err) {\r\n//       console.log(err);\r\n//       alert(\"❌ Something went wrong. Please try again.\");\r\n//     }\r\n//   };\r\n  \r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         display: \"flex\",\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//         height: \"100vh\",\r\n//         background: \"linear-gradient(to right, #a18cd1, #fbc2eb)\",\r\n//       }}\r\n//     >\r\n//       <div\r\n//         style={{\r\n//           width: \"350px\",\r\n//           padding: \"30px\",\r\n//           background: \"rgba(255, 255, 255, 0.9)\",\r\n//           boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.1)\",\r\n//           borderRadius: \"10px\",\r\n//           textAlign: \"center\",\r\n//         }}\r\n//       >\r\n//         <h2\r\n//           style={{\r\n//             fontSize: \"22px\",\r\n//             fontWeight: \"bold\",\r\n//             marginBottom: \"20px\",\r\n//             color: \"#444\",\r\n//           }}\r\n//         >\r\n//           Welcome Back!\r\n//         </h2>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <input\r\n//               type=\"email\"\r\n//               placeholder=\"Enter Email\"\r\n//               value={email}\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//               required\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"12px\",\r\n//                 fontSize: \"16px\",\r\n//                 border: \"1px solid #ccc\",\r\n//                 borderRadius: \"5px\",\r\n//                 transition: \"0.3s\",\r\n//               }}\r\n//             />\r\n//           </div>\r\n\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Enter Password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//               required\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"12px\",\r\n//                 fontSize: \"16px\",\r\n//                 border: \"1px solid #ccc\",\r\n//                 borderRadius: \"5px\",\r\n//                 transition: \"0.3s\",\r\n//               }}\r\n//             />\r\n//           </div>\r\n\r\n//    {/* CAPTCHA Section */}\r\n//    <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", gap: \"10px\", marginBottom: \"15px\" }}>\r\n//             <p\r\n//               style={{\r\n//                 fontSize: \"18px\",\r\n//                 fontWeight: \"bold\",\r\n//                 background: \"#eee\",\r\n//                 padding: \"5px 10px\",\r\n//                 borderRadius: \"5px\",\r\n//                 letterSpacing: \"3px\",\r\n//               }}\r\n//             >\r\n//               {captcha}\r\n//             </p>\r\n//             <button type=\"button\" onClick={refreshCaptcha} style={{ background: \"none\", border: \"none\", cursor: \"pointer\" }}>\r\n//             <i class=\"fa-solid fa-rotate\"></i>\r\n//             </button>\r\n//           </div>\r\n//           <div style={{ marginBottom: \"15px\" }}>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter CAPTCHA\"\r\n//               value={userCaptcha}\r\n//               onChange={(e) => setUserCaptcha(e.target.value)}\r\n//               required\r\n//               style={{\r\n//                 width: \"100%\",\r\n//                 padding: \"12px\",\r\n//                 fontSize: \"16px\",\r\n//                 border: \"1px solid #ccc\",\r\n//                 borderRadius: \"5px\",\r\n//               }}\r\n//             />\r\n//           </div>\r\n//           <button\r\n//             type=\"submit\"\r\n//             style={{\r\n//               width: \"100%\",\r\n//               padding: \"12px\",\r\n//               fontSize: \"16px\",\r\n//               fontWeight: \"bold\",\r\n//               background: \"linear-gradient(to right, #ff758c, #ff7eb3)\",\r\n//               border: \"none\",\r\n//               borderRadius: \"5px\",\r\n//               color: \"white\",\r\n//               cursor: \"pointer\",\r\n//               transition: \"0.3s\",\r\n//             }}\r\n//             onMouseOver={(e) =>\r\n//               (e.target.style.background =\r\n//                 \"linear-gradient(to right, #ff7eb3, #ff758c)\")\r\n//             }\r\n//             onMouseOut={(e) =>\r\n//               (e.target.style.background =\r\n//                 \"linear-gradient(to right, #ff758c, #ff7eb3)\")\r\n//             }\r\n//           >\r\n//             Login\r\n//           </button>\r\n//         </form>\r\n\r\n//         <p style={{ marginTop: \"10px\", fontSize: \"14px\" }}>\r\n//           <Link\r\n//             to=\"/forgot-password\"\r\n//             style={{\r\n//               color: \"#ff758c\",\r\n//               fontWeight: \"bold\",\r\n//               textDecoration: \"none\",\r\n//             }}\r\n//           >\r\n//             Forgot Password?\r\n//           </Link>\r\n//         </p>\r\n\r\n//         <p style={{ marginTop: \"10px\", fontSize: \"14px\" }}>\r\n//           New here?{\" \"}\r\n//           <Link\r\n//             to=\"/signup\"\r\n//             style={{\r\n//               color: \"#ff758c\",\r\n//               fontWeight: \"bold\",\r\n//               textDecoration: \"none\",\r\n//             }}\r\n//           >\r\n//             Create an Account\r\n//           </Link>\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [captcha, setCaptcha] = useState(\"\");\r\n  const [userCaptcha, setUserCaptcha] = useState(\"\");\r\n\r\n  // CAPTCHA generation function\r\n  const generateCaptcha = () => {\r\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    return Array.from({ length: 6 }, () => chars[Math.floor(Math.random() * chars.length)]).join(\"\");\r\n  };\r\n\r\n  // Refresh CAPTCHA\r\n  const refreshCaptcha = () => {\r\n    setCaptcha(generateCaptcha());\r\n    setUserCaptcha(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshCaptcha(); // Generate CAPTCHA on mount\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (userCaptcha.trim().toUpperCase() !== captcha.trim().toUpperCase()) {\r\n      alert(\"❌ CAPTCHA incorrect! Please try again.\");\r\n      refreshCaptcha();\r\n      return;\r\n    }\r\n\r\n    const obj = JSON.stringify({ email, password });\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: obj,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        alert(\"✅ Successfully logged in!\");\r\n\r\n        localStorage.setItem(\"token\", data.token);\r\n        localStorage.setItem(\"name\", data.name);\r\n        localStorage.setItem(\"email\", data.email);\r\n        localStorage.setItem(\"role\", data.role);\r\n        \r\n        console.log(\"Login Response:\", data);\r\n\r\n        // Navigate based on role\r\n        if (data.role?.toLowerCase() === \"admin\") {\r\n          navigate(\"/admin\");\r\n        } else {\r\n          navigate(\"/userdashboard\");\r\n        }\r\n      } else {\r\n        alert(\"❌ Invalid credentials! Try again.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Login Error:\", err);\r\n      alert(\"❌ Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h2>Welcome Back!</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"email\" placeholder=\"Enter Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n          <input type=\"password\" placeholder=\"Enter Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n\r\n          <div className=\"captcha-container\">\r\n            <p className=\"captcha-text\">{captcha}</p>\r\n            <button type=\"button\" onClick={refreshCaptcha} className=\"refresh-btn\">\r\n              <i className=\"fa-solid fa-rotate\"></i>\r\n            </button>\r\n          </div>\r\n          <input type=\"text\" placeholder=\"Enter CAPTCHA\" value={userCaptcha} onChange={(e) => setUserCaptcha(e.target.value)} required />\r\n\r\n          <button type=\"submit\" className=\"login-btn\">Login</button>\r\n        </form>\r\n\r\n        <p><Link to=\"/forgot-password\">Forgot Password?</Link></p>\r\n        <p>New here? <Link to=\"/signup\">Create an Account</Link></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}