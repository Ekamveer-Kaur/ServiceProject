{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satyam\\\\Desktop\\\\FinalProject\\\\frontend\\\\src\\\\Admin\\\\AdminOrders.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n\n// const AdminOrders = () => {\n//   const [orders, setOrders] = useState([]);\n//   const [email, setEmail] = useState(\"\");\n//   const [loading, setloading] = useState(false);\n//   const [loadingorderId,setloadingorderId]= useState(null);\n//   useEffect(() => {\n//     fetchOrders();\n//   }, []);\n\n//   const fetchOrders = async () => {\n//     try {\n//       const res = await fetch(\"http://localhost:5000/api/getorders\");\n//       const data = await res.json();\n//       setOrders(data.orders);\n//     } catch (err) {\n//       console.error(\"Error:\", err);\n//     }\n//   };\n\n//   const emails = [...new Set(orders.map(o => o.userId?.email).filter(Boolean))];\n//   const filtered = email ? orders.filter(o => o.userId?.email === email) : [];\n\n//   const handleReject = async (orderId) => {\n//     setloadingorderId(orderId);\n//     await fetch(`http://localhost:5000/api/updateorder/${orderId}`, {\n//       method: \"PUT\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ deliveryStatus: \"Rejected\" })\n//     });\n//     await fetchOrders();\n//     setloadingorderId(null);\n//   };\n\n//   const handleProceed = async (orderId, orderDate, Type) => {\n//     setloadingorderId(orderId);\n//     const deliveryDate = new Date(orderDate);\n\n//     // Fast: +1 day, Normal: +3 days\n//     if (Type === \"Fast\") {\n//       deliveryDate.setDate(deliveryDate.getDate() + 1);\n//     } else {\n//       deliveryDate.setDate(deliveryDate.getDate() + 3);\n//     }\n\n//     await fetch(`http://localhost:5000/api/updateorder/${orderId}`, {\n//       method: \"PUT\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({\n//         deliveryStatus: \"Shipped\",\n//         deliveryDate\n//       })\n//     });\n\n//     await fetchOrders();\n//     setloadingorderId(null);\n//   };\n\n//   return (\n//     <div className=\"container mt-4\">\n//       <h3>Select Email to View Orders</h3>\n\n//       <select className=\"form-select mb-3\" value={email} onChange={(e) => setEmail(e.target.value)}>\n//         <option value=\"\">-- Select Email --</option>\n//         {emails.map((e, i) => (\n//           <option key={i} value={e}>{e}</option>\n//         ))}\n//       </select>\n// {loading && <div className='text-center mt-3 '>please wait...</div>}\n\n//       {filtered.length === 0 && email && <p>No orders found for this user.</p>}\n\n//       {filtered.map((order, i) => (\n//         <div key={i} className=\"card mb-2 p-3\">\n//           <p><strong>Services:</strong></p>\n//           <ul>\n//             {order.cartItems.map((item, idx) => (\n//               <li key={idx}>{item.name} - Quantity: {item.quantity}</li>\n//             ))}\n//           </ul>\n//           <p><strong>Order Date:</strong> {new Date(order.orderDate).toLocaleDateString()}</p>\n//           <p><strong>Delivery Type:</strong> {order.deliveryType || \"Not Selected\"}</p>\n//           <p><strong>Status:</strong> {order.deliveryStatus}</p> \n// {order.deliveryDate && (\n//   <p><strong>Delivery Date:</strong> {new Date(order.deliveryDate).toLocaleDateString()}</p>\n// )}\n\n//           <p><strong>Amount:</strong> ₹{order.totalAmount}</p>\n\n//           <div className=\"mt-2 d-flex gap-2\">\n//           <button\n//   className=\"btn btn-danger\"\n//   onClick={() => handleReject(order._id)}\n//   disabled={loadingorderId===order._id ||order.deliveryStatus === \"Rejected\"}  // Reject can be done anytime unless already rejected\n\n// >\n//   {loadingorderId=== order._id? \"Processing...\":\"Reject\"}\n// </button>\n\n// <button\n//   className=\"btn btn-success\"\n//   onClick={() => handleProceed(order._id, order.orderDate, order.deliveryType)}\n//   disabled={loadingorderId===order._id || order.deliveryStatus === \"Shipped\" || order.deliveryStatus === \"Rejected\"}\n// >\n//   {loadingorderId=== order._id ? \"Processing...\":\"Proceed\"}\n// </button>\n\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default AdminOrders;\n\nimport React, { useEffect, useState } from 'react';\nimport api from '../axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminOrders = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [message, setMessage] = useState('');\n  const [selectedEmail, setSelectedEmail] = useState('');\n  const [paymentFilter, setPaymentFilter] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [loadingOrderId, setLoadingOrderId] = useState('');\n  useEffect(() => {\n    getAllOrders();\n  }, []);\n  const getAllOrders = async () => {\n    try {\n      const res = await api.get('/getorders');\n      setOrders(res.data.orders || []);\n      setSelectedEmail('');\n    } catch (err) {\n      console.log(\"Error:\", err);\n    }\n  };\n  const getOrdersByEmail = async email => {\n    if (!email) return; // Handle empty email case\n    try {\n      const res = await api.get(`/ordersbyemail/${email}`);\n      setOrders(res.data.orders || []);\n      setSelectedEmail(email);\n    } catch (err) {\n      console.log(\"Error:\", err);\n    }\n  };\n  const handleReject = async orderId => {\n    setLoadingOrderId(orderId);\n    try {\n      await api.put(`/updateorder/${orderId}`, {\n        deliveryStatus: 'Rejected'\n      });\n      await getAllOrders();\n    } catch (error) {\n      console.error(\"Error rejecting the order:\", error);\n    }\n    setLoadingOrderId(null);\n  };\n  const handleProceed = async (orderId, orderDate, deliveryStatus) => {\n    setLoadingOrderId(orderId);\n    let newDeliveryDate = new Date(orderDate);\n    if (deliveryStatus === 'fast') {\n      newDeliveryDate.setDate(newDeliveryDate.getDate() + 2);\n    } else {\n      newDeliveryDate.setDate(newDeliveryDate.getDate() + 4);\n    }\n    try {\n      await api.put(`/updateorder/${orderId}`, {\n        deliveryStatus: 'Shipped',\n        paymentStatus: 'paid',\n        deliveryDate: newDeliveryDate\n      });\n      await getAllOrders();\n    } catch (error) {\n      console.error(\"Error updating the order:\", error);\n    }\n    setLoadingOrderId(null);\n  };\n  const uniqueEmails = [...new Set(orders.map(order => {\n    var _order$userId;\n    return (_order$userId = order.userId) === null || _order$userId === void 0 ? void 0 : _order$userId.email;\n  }).filter(Boolean))];\n  const filteredOrders = paymentFilter ? orders.filter(order => order.paymentStatus === paymentFilter) : orders;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedEmail ? `Orders of ${selectedEmail}` : 'All Orders'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), selectedEmail && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary mb-3\",\n      onClick: getAllOrders,\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this), !selectedEmail && uniqueEmails.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Select by Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        value: selectedEmail,\n        onChange: e => getOrdersByEmail(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select an email --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), uniqueEmails.map(email => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: email,\n          children: email\n        }, email, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center md-3 text-white\",\n        children: \"Please Wait...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Filter by Payment Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        value: paymentFilter,\n        onChange: e => setPaymentFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- All --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"paid\",\n          children: \"Paid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"failed\",\n          children: \"Failed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }, this), filteredOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No orders found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this) : filteredOrders.map((order, index) => {\n      var _order$userId2, _order$userId4;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-3 p-3 shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Service:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 16\n          }, this), \" Order \", index + 1, \" - \", order.serviceName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 16\n          }, this), \" \", order.deliveryStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 16\n          }, this), \" \\u20B9\", order.totalAmount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Payment Status: \", order.paymentStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Order Date :\", new Date(order.orderDate).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"User:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), \" \", ((_order$userId2 = order.userId) === null || _order$userId2 === void 0 ? void 0 : _order$userId2.name) || 'N/A', \" (\", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'blue',\n              cursor: 'pointer'\n            },\n            onClick: () => {\n              var _order$userId3;\n              return getOrdersByEmail((_order$userId3 = order.userId) === null || _order$userId3 === void 0 ? void 0 : _order$userId3.email);\n            },\n            children: ((_order$userId4 = order.userId) === null || _order$userId4 === void 0 ? void 0 : _order$userId4.email) || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), order.deliveryStatus === 'Pending' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success btn-sm\",\n            onClick: () => handleProceed(order._id, order.serviceDate, order.deliveryStatus),\n            disabled: loadingOrderId === order._id || order.deliveryStatus === \"Shipped\",\n            children: loadingOrderId === order._id ? 'Processing...' : 'Approve'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger btn-sm\",\n            onClick: () => handleReject(order._id),\n            disabled: loadingOrderId === order._id || order.deliveryStatus === \"Rejected\",\n            children: loadingOrderId === order._id ? 'Rejecting...' : 'Reject'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this), order.deliveryStatus === 'Shipped' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge bg-info\",\n          children: \"Shipped\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }, this), order.deliveryStatus === 'Delivered' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge bg-success\",\n          children: \"Delivered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }, this), order.deliveryStatus === 'Rejected' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge bg-danger\",\n          children: \"Rejected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"order-items mt-2\",\n          children: order.cartItems.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this), \" - \\u20B9\", item.price, \" x \", item.quantity]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/admin/adminorderdetails/${order._id}`,\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, order._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminOrders, \"TsndLI3UMYJuMGhfuHD2KRS9w7k=\");\n_c = AdminOrders;\nexport default AdminOrders;\nvar _c;\n$RefreshReg$(_c, \"AdminOrders\");","map":{"version":3,"names":["React","useEffect","useState","api","Link","jsxDEV","_jsxDEV","AdminOrders","_s","orders","setOrders","message","setMessage","selectedEmail","setSelectedEmail","paymentFilter","setPaymentFilter","loading","setLoading","loadingOrderId","setLoadingOrderId","getAllOrders","res","get","data","err","console","log","getOrdersByEmail","email","handleReject","orderId","put","deliveryStatus","error","handleProceed","orderDate","newDeliveryDate","Date","setDate","getDate","paymentStatus","deliveryDate","uniqueEmails","Set","map","order","_order$userId","userId","filter","Boolean","filteredOrders","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","value","onChange","e","target","index","_order$userId2","_order$userId4","serviceName","totalAmount","toLocaleString","name","style","color","cursor","_order$userId3","_id","serviceDate","disabled","cartItems","item","idx","price","quantity","to","_c","$RefreshReg$"],"sources":["C:/Users/satyam/Desktop/FinalProject/frontend/src/Admin/AdminOrders.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n\r\n// const AdminOrders = () => {\r\n//   const [orders, setOrders] = useState([]);\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [loading, setloading] = useState(false);\r\n//   const [loadingorderId,setloadingorderId]= useState(null);\r\n//   useEffect(() => {\r\n//     fetchOrders();\r\n//   }, []);\r\n\r\n//   const fetchOrders = async () => {\r\n//     try {\r\n//       const res = await fetch(\"http://localhost:5000/api/getorders\");\r\n//       const data = await res.json();\r\n//       setOrders(data.orders);\r\n//     } catch (err) {\r\n//       console.error(\"Error:\", err);\r\n//     }\r\n//   };\r\n\r\n//   const emails = [...new Set(orders.map(o => o.userId?.email).filter(Boolean))];\r\n//   const filtered = email ? orders.filter(o => o.userId?.email === email) : [];\r\n\r\n//   const handleReject = async (orderId) => {\r\n//     setloadingorderId(orderId);\r\n//     await fetch(`http://localhost:5000/api/updateorder/${orderId}`, {\r\n//       method: \"PUT\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ deliveryStatus: \"Rejected\" })\r\n//     });\r\n//     await fetchOrders();\r\n//     setloadingorderId(null);\r\n//   };\r\n\r\n//   const handleProceed = async (orderId, orderDate, Type) => {\r\n//     setloadingorderId(orderId);\r\n//     const deliveryDate = new Date(orderDate);\r\n  \r\n//     // Fast: +1 day, Normal: +3 days\r\n//     if (Type === \"Fast\") {\r\n//       deliveryDate.setDate(deliveryDate.getDate() + 1);\r\n//     } else {\r\n//       deliveryDate.setDate(deliveryDate.getDate() + 3);\r\n//     }\r\n  \r\n//     await fetch(`http://localhost:5000/api/updateorder/${orderId}`, {\r\n//       method: \"PUT\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({\r\n//         deliveryStatus: \"Shipped\",\r\n//         deliveryDate\r\n//       })\r\n//     });\r\n  \r\n//     await fetchOrders();\r\n//     setloadingorderId(null);\r\n//   };\r\n  \r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h3>Select Email to View Orders</h3>\r\n\r\n//       <select className=\"form-select mb-3\" value={email} onChange={(e) => setEmail(e.target.value)}>\r\n//         <option value=\"\">-- Select Email --</option>\r\n//         {emails.map((e, i) => (\r\n//           <option key={i} value={e}>{e}</option>\r\n//         ))}\r\n//       </select>\r\n// {loading && <div className='text-center mt-3 '>please wait...</div>}\r\n\r\n//       {filtered.length === 0 && email && <p>No orders found for this user.</p>}\r\n\r\n//       {filtered.map((order, i) => (\r\n//         <div key={i} className=\"card mb-2 p-3\">\r\n//           <p><strong>Services:</strong></p>\r\n//           <ul>\r\n//             {order.cartItems.map((item, idx) => (\r\n//               <li key={idx}>{item.name} - Quantity: {item.quantity}</li>\r\n//             ))}\r\n//           </ul>\r\n//           <p><strong>Order Date:</strong> {new Date(order.orderDate).toLocaleDateString()}</p>\r\n//           <p><strong>Delivery Type:</strong> {order.deliveryType || \"Not Selected\"}</p>\r\n//           <p><strong>Status:</strong> {order.deliveryStatus}</p> \r\n// {order.deliveryDate && (\r\n//   <p><strong>Delivery Date:</strong> {new Date(order.deliveryDate).toLocaleDateString()}</p>\r\n// )}\r\n\r\n//           <p><strong>Amount:</strong> ₹{order.totalAmount}</p>\r\n          \r\n\r\n//           <div className=\"mt-2 d-flex gap-2\">\r\n//           <button\r\n//   className=\"btn btn-danger\"\r\n//   onClick={() => handleReject(order._id)}\r\n//   disabled={loadingorderId===order._id ||order.deliveryStatus === \"Rejected\"}  // Reject can be done anytime unless already rejected\r\n\r\n// >\r\n//   {loadingorderId=== order._id? \"Processing...\":\"Reject\"}\r\n// </button>\r\n\r\n// <button\r\n//   className=\"btn btn-success\"\r\n//   onClick={() => handleProceed(order._id, order.orderDate, order.deliveryType)}\r\n//   disabled={loadingorderId===order._id || order.deliveryStatus === \"Shipped\" || order.deliveryStatus === \"Rejected\"}\r\n// >\r\n//   {loadingorderId=== order._id ? \"Processing...\":\"Proceed\"}\r\n// </button>\r\n\r\n\r\n//           </div>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AdminOrders;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport api from '../axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AdminOrders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [selectedEmail, setSelectedEmail] = useState('');\r\n  const [paymentFilter, setPaymentFilter] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingOrderId, setLoadingOrderId] = useState('');\r\n\r\n  useEffect(() => {\r\n    getAllOrders();\r\n  }, []);\r\n\r\n  const getAllOrders = async () => {\r\n    try {\r\n      const res = await api.get('/getorders');\r\n      setOrders(res.data.orders || []);\r\n      setSelectedEmail('');\r\n    } catch (err) {\r\n      console.log(\"Error:\", err);\r\n    }\r\n  };\r\n\r\n  const getOrdersByEmail = async (email) => {\r\n    if (!email) return; // Handle empty email case\r\n    try {\r\n      const res = await api.get(`/ordersbyemail/${email}`);\r\n      setOrders(res.data.orders || []);\r\n      setSelectedEmail(email);\r\n    } catch (err) {\r\n      console.log(\"Error:\", err);\r\n    }\r\n  };\r\n\r\n  const handleReject = async (orderId) => {\r\n    setLoadingOrderId(orderId);\r\n    try {\r\n      await api.put(`/updateorder/${orderId}`, {\r\n        deliveryStatus: 'Rejected',\r\n      });\r\n      await getAllOrders();\r\n    } catch (error) {\r\n      console.error(\"Error rejecting the order:\", error);\r\n    }\r\n    setLoadingOrderId(null);\r\n  };\r\n\r\n  const handleProceed = async (orderId, orderDate, deliveryStatus) => {\r\n    setLoadingOrderId(orderId);\r\n    let newDeliveryDate = new Date(orderDate);\r\n\r\n    if (deliveryStatus === 'fast') {\r\n      newDeliveryDate.setDate(newDeliveryDate.getDate() + 2);\r\n    } else {\r\n      newDeliveryDate.setDate(newDeliveryDate.getDate() + 4);\r\n    }\r\n\r\n    try {\r\n      await api.put(`/updateorder/${orderId}`, {\r\n        deliveryStatus: 'Shipped',\r\n        paymentStatus: 'paid',\r\n        deliveryDate: newDeliveryDate,\r\n      });\r\n      await getAllOrders();\r\n    } catch (error) {\r\n      console.error(\"Error updating the order:\", error);\r\n    }\r\n\r\n    setLoadingOrderId(null);\r\n  };\r\n\r\n  const uniqueEmails = [...new Set(orders.map(order => order.userId?.email).filter(Boolean))];\r\n\r\n  const filteredOrders = paymentFilter\r\n    ? orders.filter(order => order.paymentStatus === paymentFilter)\r\n    : orders;\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2>{selectedEmail ? `Orders of ${selectedEmail}` : 'All Orders'}</h2>\r\n\r\n      {selectedEmail && (\r\n        <button className=\"btn btn-secondary mb-3\" onClick={getAllOrders}>\r\n          ← Back\r\n        </button>\r\n      )}\r\n\r\n      {!selectedEmail && uniqueEmails.length > 0 && (\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\"><b>Select by Email:</b></label>\r\n          <select\r\n            className=\"form-select\"\r\n            value={selectedEmail}\r\n            onChange={(e) => getOrdersByEmail(e.target.value)}\r\n          >\r\n            <option value=\"\">-- Select an email --</option>\r\n            {uniqueEmails.map((email) => (\r\n              <option key={email} value={email}>{email}</option>\r\n            ))}\r\n          </select>\r\n          {loading && <div className='text-center md-3 text-white'>Please Wait...</div>}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"mb-3\">\r\n        <label className=\"form-label\"><b>Filter by Payment Status:</b></label>\r\n        <select\r\n          className=\"form-select\"\r\n          value={paymentFilter}\r\n          onChange={(e) => setPaymentFilter(e.target.value)}\r\n        >\r\n          <option value=\"\">-- All --</option>\r\n          <option value=\"paid\">Paid</option>\r\n          <option value=\"failed\">Failed</option>\r\n          <option value=\"Pending\">Pending</option>\r\n        </select>\r\n      </div>\r\n\r\n      {message && <div className=\"alert alert-info\">{message}</div>}\r\n\r\n      {filteredOrders.length === 0 ? (\r\n        <p>No orders found.</p>\r\n      ) : (\r\n        filteredOrders.map((order, index) => (\r\n          <div key={order._id} className=\"card mb-3 p-3 shadow-sm\">\r\n            <p><b>Service:</b> Order {index + 1} - {order.serviceName}</p>\r\n            <p><strong>Status:</strong> {order.deliveryStatus}</p>\r\n            <p><b>Amount:</b> ₹{order.totalAmount}</p>\r\n            <p>Payment Status: {order.paymentStatus}</p>\r\n            <p>Order Date :{new Date(order.orderDate).toLocaleString()}</p>\r\n            <p>\r\n              <b>User:</b> {order.userId?.name || 'N/A'} (\r\n              <span\r\n                style={{ color: 'blue', cursor: 'pointer' }}\r\n                onClick={() => getOrdersByEmail(order.userId?.email)}\r\n              >\r\n                {order.userId?.email || 'N/A'}\r\n              </span>\r\n              )\r\n            </p>\r\n\r\n            {order.deliveryStatus === 'Pending' && (\r\n              <div className=\"d-flex gap-2\">\r\n                <button className=\"btn btn-success btn-sm\" onClick={() => handleProceed(order._id, order.serviceDate, order.deliveryStatus)}\r\n                  disabled={loadingOrderId === order._id || order.deliveryStatus === \"Shipped\"} >\r\n                  {loadingOrderId === order._id ? 'Processing...' : 'Approve'}\r\n                </button>\r\n                <button className=\"btn btn-danger btn-sm\" onClick={() => handleReject(order._id)}\r\n                  disabled={loadingOrderId === order._id || order.deliveryStatus === \"Rejected\"} >\r\n                  {loadingOrderId === order._id ? 'Rejecting...' : 'Reject'}\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {order.deliveryStatus === 'Shipped' && (\r\n              <span className=\"badge bg-info\">Shipped</span>\r\n            )}\r\n\r\n            {order.deliveryStatus === 'Delivered' && (\r\n              <span className=\"badge bg-success\">Delivered</span>\r\n            )}\r\n\r\n            {order.deliveryStatus === 'Rejected' && (\r\n              <span className=\"badge bg-danger\">Rejected</span>\r\n            )}\r\n\r\n            <ul className=\"order-items mt-2\">\r\n              {order.cartItems.map((item, idx) => (\r\n                <li key={idx}>\r\n                  <strong>{item.name}</strong> - ₹{item.price} x {item.quantity}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <Link to={`/admin/adminorderdetails/${order._id}`}>\r\n              View Details\r\n            </Link>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminOrders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}