{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satyam\\\\Desktop\\\\FinalProject\\\\frontend\\\\src\\\\components\\\\Services.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Services.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Services = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState();\n  const [show, setShow] = useState(false);\n  const [selectedsubCategory, setselectedsubCategory] = useState();\n  useEffect(() => {\n    fetch(\"http://localhost:5000/categories\") // ✅ Backend se API Call\n    .then(response => response.json()).then(data => {\n      console.log(\"categories Data:\", data);\n      setCategories(data);\n    }).catch(error => console.error(\"Error fetching categories:\", error));\n  }, []);\n  const handleShow = category => {\n    setSelectedCategory(category);\n    setShow(true);\n  };\n  //handleShow(): Jab user kisi category pe click karega, toh us category ka data store karega aur modal open hoga.\n  const handlesubcategory = subs => {\n    setselectedsubCategory(subs);\n    navigate(`/viewsmallsubcategory/${selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name}/${subs.subcategoryname}`);\n  };\n  const handleClose = () => setShow(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"services-container mt-5 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-container\",\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-card\",\n          onClick: () => handleShow(category),\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: category.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, category._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: [selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name, \" -\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: selectedCategory && selectedCategory.subcategories.length > 0 ?\n          /*#__PURE__*/\n          //.length property check karti hai ki subcategories ka array empty hai ya nahi.\n          _jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: selectedCategory.subcategories.map(sub => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                onClick: () => handlesubcategory(sub),\n                children: [sub.subcategoryname, /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: sub.subcategoryimage,\n                  style: {\n                    width: \"50px\",\n                    height: \"50px\",\n                    marginLeft: \"10px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this)]\n              }, sub._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No subcategories available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Services, \"mF9vTwX6/VUnUf35CLToEGVfBR4=\");\n_c = Services;\nexport default Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["React","useState","useEffect","Button","Modal","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Services","_s","categories","setCategories","selectedCategory","setSelectedCategory","show","setShow","selectedsubCategory","setselectedsubCategory","fetch","then","response","json","data","console","log","catch","error","handleShow","category","handlesubcategory","subs","navigate","name","subcategoryname","handleClose","children","className","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","image","_id","onHide","centered","Header","closeButton","Title","Body","subcategories","length","sub","subcategoryimage","style","width","height","marginLeft","Footer","variant","_c","$RefreshReg$"],"sources":["C:/Users/satyam/Desktop/FinalProject/frontend/src/components/Services.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Services.css\";\r\n\r\n\r\nconst Services = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState();\r\n  const [show, setShow] = useState(false);\r\nconst[selectedsubCategory, setselectedsubCategory]= useState();\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/categories\") // ✅ Backend se API Call\r\n      .then((response) => response.json())\r\n      .then((data) =>{\r\nconsole.log(\"categories Data:\", data);\r\n       setCategories(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching categories:\", error));\r\n  }, []);\r\n\r\n  const handleShow = (category) => {\r\n    setSelectedCategory(category);\r\n    setShow(true);\r\n  };\r\n  //handleShow(): Jab user kisi category pe click karega, toh us category ka data store karega aur modal open hoga.\r\nconst handlesubcategory=(subs)=>{\r\n  setselectedsubCategory(subs);\r\n  navigate(`/viewsmallsubcategory/${selectedCategory?.name}/${subs.subcategoryname}`)\r\n}\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  return (\r\n    <div>\r\n    {/* <h2 className=\"text-left ms-5 mt-4 d-flex\" >Expert Home Services,<strong className=\"d-block p-4 fs-1\" > Anytime, Anywhere</strong></h2> */}\r\n\r\n    <div className=\"services-container mt-5 p-4\">\r\n      <div className=\"categories-container\">\r\n        {categories.map((category) => (\r\n          <div key={category._id} className=\"category-card\" onClick={() => handleShow(category)}>\r\n              <strong>{category.name}</strong>\r\n              <img src={category.image}/>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n\r\n      {/* ✅ Bootstrap Modal for Subcategories */}\r\n      \r\n      <Modal show={show} onHide={handleClose} centered>\r\n        {/** jb show state true hoge tb modal dikhai denga */}\r\n\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{selectedCategory?.name} -</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {selectedCategory && selectedCategory.subcategories.length > 0 ? (\r\n            //.length property check karti hai ki subcategories ka array empty hai ya nahi.\r\n                <>             \r\n                <ul className=\"list-group\">\r\n                {selectedCategory.subcategories.map((sub) => (\r\n\r\n\r\n                <li key={sub._id} className=\"list-group-item\" onClick={()=> handlesubcategory(sub)}>\r\n                  {sub.subcategoryname}\r\n                  <img src={sub.subcategoryimage} style={{ width: \"50px\", height: \"50px\", marginLeft: \"10px\" }}/>\r\n                </li>\r\n              ))}\r\n              </ul>\r\n\r\n              \r\n\r\n </>           \r\n          ) : (\r\n            <p>No subcategories available.</p>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Services;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}