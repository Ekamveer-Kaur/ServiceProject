{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satyam\\\\Desktop\\\\FinalProject\\\\frontend\\\\src\\\\Admin\\\\AdminOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminOrders = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [email, setEmail] = useState(\"\"); // selected email\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/api/getorders\");\n        const data = await res.json();\n        console.log(\"Fetched Orders:\", data.orders); // ðŸ‘ˆ add this\n        setOrders(data.orders);\n      } catch (err) {\n        console.error(\"Error:\", err);\n      }\n    };\n    fetchOrders();\n  }, []);\n\n  // unique emails\n  const emails = [...new Set(orders.map(o => {\n    var _o$userId;\n    return (_o$userId = o.userId) === null || _o$userId === void 0 ? void 0 : _o$userId.email;\n  }).filter(Boolean))]; //...new Set duplucate emial ko hta deta hia\n\n  const filtered = email ? orders.filter(o => {\n    var _o$userId2;\n    return ((_o$userId2 = o.userId) === null || _o$userId2 === void 0 ? void 0 : _o$userId2.email) === email;\n  }) : [];\n  //.filter(...) ka matlab: jo condition match karein, sirf unhi orders ko rakhna.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Email to View Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-select mb-3\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select Email --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), emails.map((e, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: e,\n        children: e\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), filtered.length === 0 && email && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No orders found for this user.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 42\n    }, this), filtered.map((order, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-2 p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Services:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: order.cartItems.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" - Quantity: \", item.quantity]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }, this), \" \", order.serviceDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 14\n        }, this), \" \\u20B9\", order.totalAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 14\n        }, this), \" \", order.deliveryStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminOrders, \"95DpWmfxTSwo/l5l83trHafkPyw=\");\n_c = AdminOrders;\nexport default AdminOrders;\nvar _c;\n$RefreshReg$(_c, \"AdminOrders\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AdminOrders","_s","orders","setOrders","email","setEmail","fetchOrders","res","fetch","data","json","console","log","err","error","emails","Set","map","o","_o$userId","userId","filter","Boolean","filtered","_o$userId2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","i","length","order","cartItems","item","idx","name","quantity","serviceDate","totalAmount","deliveryStatus","_c","$RefreshReg$"],"sources":["C:/Users/satyam/Desktop/FinalProject/frontend/src/Admin/AdminOrders.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst AdminOrders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [email, setEmail] = useState(\"\"); // selected email\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/api/getorders\");\r\n        const data = await res.json();\r\n        console.log(\"Fetched Orders:\", data.orders); // ðŸ‘ˆ add this\r\n        setOrders(data.orders);\r\n      } catch (err) {\r\n        console.error(\"Error:\", err);\r\n      }\r\n    };\r\n  \r\n    fetchOrders();\r\n  }, []);\r\n  \r\n\r\n  // unique emails\r\n  const emails = [...new Set(orders.map(o => o.userId?.email).filter(Boolean))];   //...new Set duplucate emial ko hta deta hia\r\n\r\n  const filtered = email ? orders.filter(o => o.userId?.email === email) : [];\r\n  //.filter(...) ka matlab: jo condition match karein, sirf unhi orders ko rakhna.\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h3>Select Email to View Orders</h3>\r\n\r\n      {/* Dropdown */}\r\n      <select\r\n        className=\"form-select mb-3\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      >\r\n        <option value=\"\">-- Select Email --</option>\r\n        {emails.map((e, i) => (\r\n          <option key={i} value={e}>{e}</option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Orders for selected email */}\r\n      {filtered.length === 0 && email && <p>No orders found for this user.</p>}\r\n\r\n      {filtered.map((order, i) => (\r\n        <div key={i} className=\"card mb-2 p-3\">\r\n          <p><strong>Services:</strong></p>\r\n          <ul>\r\n            {order.cartItems.map((item, idx) => (\r\n              <li key={idx}>\r\n                {item.name} - Quantity: {item.quantity}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p><strong>Date:</strong> {order.serviceDate}</p>\r\n          <p><strong>Amount:</strong> â‚¹{order.totalAmount}</p>\r\n          <p><strong>Status:</strong> {order.deliveryStatus}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminOrders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}